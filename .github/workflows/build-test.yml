name: Multi-Compiler Build And Test 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: [Release]
        c_compiler: [gcc-14, clang-18]
        include:
          - os: ubuntu-latest
            c_compiler: gcc-14
            cpp_compiler: g++-14
          - os: ubuntu-latest
            c_compiler: clang-18
            cpp_compiler: clang++-18

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
   
    - name: Install Dependencies and Compiler
      run: |
        sudo apt-get update
        
        if [ "${{ matrix.c_compiler }}" = "gcc-14" ]; then
          # Add the toolchain PPA to get access to newer GCC versions
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y g++-14 
        elif [ "${{ matrix.c_compiler.name }}" = "clang-18" ]; then
          # Use the official LLVM script to install a specific Clang version
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18
          sudo apt-get install -y clang-18
        fi
    - name: Install libuv
      run: |
        wget https://github.com/libuv/libuv/archive/refs/tags/v1.49.2.tar.gz
        tar -xvzf v1.49.2.tar.gz
        cd libuv-1.49.2
        sh autogen.sh
        ./configure
        make
        make check
        sudo make install
        
    - name: Configure CMake
      run: >
        cmake -B ${{github.workspace}}/build
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DCMAKE_C_COMPILER=${{matrix.c_compiler}}
        -DCMAKE_CXX_COMPILER=${{matrix.cpp_compiler}}

    - name: Build Project
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Run Tests
      working-directory: ${{github.workspace}}/build/tests
      run: ctest -C ${{env.BUILD_TYPE}}
